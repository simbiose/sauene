{"version":3,"names":[],"mappings":"","sources":["sauene.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Button = exports.Button = function (_HTMLElement) {\n    _inherits(Button, _HTMLElement);\n\n    function Button() {\n        _classCallCheck(this, Button);\n\n        return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this));\n    }\n\n    /**\n     * CreatedCallback\n     * The behavior you define occurs\n     * when the element is registered.\n     */\n\n\n    _createClass(Button, [{\n        key: 'createdCallback',\n        value: function createdCallback() {\n            console.log('createdCallback', arguments);\n        }\n\n        /**\n         * attachedCallback\n         * The behavior occurs when\n         * the element is inserted into the DOM.\n         */\n\n    }, {\n        key: 'attachedCallback',\n        value: function attachedCallback() {\n            console.log('attachedCallback', arguments);\n        }\n\n        /**\n         * detachedCallback\n         * The behavior occurs when\n         * the element is removed from the DOM.\n         */\n\n    }, {\n        key: 'detachedCallback',\n        value: function detachedCallback() {\n            console.log('detachedCallback', arguments);\n        }\n\n        /**\n         * attributeChangedCallback\n         * The behavior occurs when\n         * an attribute of the element is added, changed, or removed\n         */\n\n    }, {\n        key: 'attributeChangedCallback',\n        value: function attributeChangedCallback(name, oldValue, newValue) {\n            console.log('attributeChangedCallback', name, oldValue, newValue);\n        }\n    }]);\n\n    return Button;\n}(HTMLElement);\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _button = require('./components/button');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Sauene\n */\nvar Sauene = function Sauene() {\n    _classCallCheck(this, Sauene);\n\n    document.registerElement('sauene-button', _button.Button);\n};\n\n// boot\n\n\nvar DOM_CONTENT_LOADED = \"DOMContentLoaded\";\nfunction contentLoaded(event) {\n    document.removeEventListener(DOM_CONTENT_LOADED, contentLoaded);\n    new Sauene();\n}\ndocument.addEventListener(DOM_CONTENT_LOADED, contentLoaded);\n\n},{\"./components/button\":1}]},{},[2]);\n"],"file":"sauene.js"}